buildscript {
  repositories {
    mavenLocal()
    mavenCentral()
    gradlePluginPortal()
  }
}

plugins {
  id "java-library"
  id "com.github.johnrengelman.shadow" version "8.1.1"
  id "org.graalvm.buildtools.native" version "0.10.2"
  id "io.freefair.aspectj.post-compile-weaving" version "8.6"
}

repositories {
  mavenLocal()
  mavenCentral()
}

dependencies {
  implementation("org.aspectj:aspectjrt:1.9.22.1")
  testImplementation('org.junit.jupiter:junit-jupiter:5.10.2')
}

sourceCompatibility = JavaVersion.VERSION_21

def mainClassName = "com.huongdanjava.aspectj.Application"

graalvmNative {
  binaries {
    main {
      javaLauncher = javaToolchains.launcherFor {
        languageVersion = JavaLanguageVersion.of(21)
//        requiredVersion = '22.3'
        vendor = JvmVendorSpec.matching("GraalVM Community")
      }

      // Main options
      imageName = project.name
      mainClass = mainClassName
//      debug = true
      verbose = true
      fallback = false
      sharedLibrary = false
      buildArgs.add('-J-Xmx7G')
      buildArgs.add('--no-server')
      buildArgs.add('-Dfile.encoding=UTF-8')
//      buildArgs.add('--link-at-build-time')
    }
  }
}

test {
  useJUnitPlatform()
  testLogging {
    showStandardStreams = true
    events "passed", "skipped", "failed"
  }
}

jar {
  manifest {
    attributes "Main-Class": mainClassName
  }
}

shadowJar {
  mergeServiceFiles()
}
