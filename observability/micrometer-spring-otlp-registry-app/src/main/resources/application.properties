server.port=8080

spring.application.name=micrometer-spring-otlp-registry-app

# Logs
logging.level.io.opentelemetry=DEBUG
logging.level.io.micrometer=TRACE

# Actuator
info.version=${version}
management.endpoints.web.exposure.include=*
management.endpoint.info.enabled=true
management.info.env.enabled=true

# Micrometer Metrics Exporting to OTLP Collector
# management.metrics.tags.app_name=micrometer-spring-otlp-registry-app #deprecated
management.observations.key-values.app_name=micrometer-spring-otlp-registry-app
management.otlp.metrics.export.url=http://otel-collector.docker:4318/v1/metrics

# management.otlp.metrics.export.resource-attributes.service.namespace=com.mageddo #deprecated
management.opentelemetry.resource-attributes.service.namespace=com.mageddo
management.opentelemetry.resource-attributes.service.id=123
management.opentelemetry.resource-attributes.service.version=${version}

# Micrometer Tracing Exporting to OTLP Collector
# tag:trace-programmatic
management.otlp.tracing.endpoint=http://otel-collector.docker:4318/v1/traces
management.tracing.sampling.probability=1
management.tracing.enabled=false
# tag:end
# kafka
spring.kafka.bootstrap-servers=kafka.docker:9092
